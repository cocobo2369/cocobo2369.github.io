.dl-table {
  a {
    @supports ((text-decoration-thickness: initial) and (text-underline-offset: initial)) {
      text-underline-offset: .8rem;
    }
    @supports not ((text-decoration-thickness: initial) and (text-underline-offset: initial)) {
      padding-bottom: .45rem;
    }
  }

  .btn, .gumroad-button  {
    margin: 1rem 0;
  }
}

// 메뉴
.spread-btn{
  right: 15%;
  position: absolute;
  padding: 0;
  padding-top: 2px;
  border: none;
  background: none;
  color: white;
  cursor: pointer;
  z-index: 1;
}
.menu-wrapper {
  text-align: left;
  margin-left: 30%;
}
.submenu.menu-wrapper{
  right: 10%;
  position: absolute;
  background-color: rgb(34,31,32);
  border-radius: 5px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.7);
  width: 10rem;
  z-index: 2;
  ul{
    margin: 0;
    padding: 0 1.25rem;
  }
}
.submenu.menu-wrapper.hide{
  display: none;
}

// for top-menu
.top-menu-wrapper{
  display: inline-block;
}
.top-menu{
  overflow-x: auto; // overflowx 속성은 x 축, 즉 왼쪽과 오른쪽의 내용이 더 길 때(가로),
  overflow-y: hidden; // overflowy 속성은 y 축, 즉 위와 아래의 내용이 더 길때 (세로) 어떻게 보일지 선택하는 속성
  white-space: nowrap; // whitespace 는 스페이스와 탭, 줄바꿈, 자동줄바꿈을 어떻게 처리할지 정하는 속성, nowrap :병합
}
// for top-menu
.top-menu.nav-btn{
  border: none;
  display: inline-flex; // Flex 는 요소의 크기가 불분명하거나 동적인 경우에도, 각 요소를 정렬할 수 있는 효율적인 방법을 제공, Inline 특성의 Flex Container 를 정의
  width: 6rem; // inlineflex : Inline(Inline Block) 요소와 같은 성향(수평 쌓임)
  margin-left: -1px;
}

.nav-btn-bar{
  height: 3rem;
}

// profile avatar image
.content .avatar {
  float: left !important;    // 왼쪽으로 보낼지 오른쪽으로 보낼지
  box-sizing: content-box;
  border: 1rem solid var(--body-bg);
  transition: border-color 1s ease;
  margin-top: 5px !important;
  margin-left: 5px !important;
  width:140px !important; 	// 이미지 크기 
  height:140px !important;
}

.author-body-description {
  margin-left: 200px !important;  // 소개글 위치 정하기 200px
  margin-top: 20px !important;      // 20px
}

.content a:not(.btn):not(.no-hover) {
  text-decoration-color: rgba(255, 1, 94, 0.5);
}

.markdown-body > p > a {
  font-weight: bold !important;
  color: rgb(100,3,200) !important;
}

.markdown-body > ol > li >p > a {
  font-weight: bold !important;
  color: rgb(100,3,200) !important;
}

.markdown-body{
  kbd {
    font-size: 15px;
    font-family: monospace;
    color: #555;
    background-color: #fcfcfc;
    border: solid 1px;
    border-radius: 3px;
    border-bottom-color: #bbb;
    padding: 3px 5px;
  }

  mark {
    padding: 3px 5px;
    background-color: #FF9c94;
  }
}
//button
.page-control {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.page-control > div {
  max-width: 50%;
}.page-control {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.page-control > div {
  max-width: 50%;
}

.button {
  box-shadow:inset 0px 1px 0px 0px #ffffff;
  background:linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);
  background-color:#ffffff;
  border-radius:16px;
  border:3px solid #dcdcdc;
  display:inline-block;
  cursor:pointer;
  color:#666666;
  font-family:Arial;
  font-size:18px;
  font-weight:bold;
  padding:6px 100px;
  text-decoration:none;
  text-shadow:0px 1px 0px #ffffff;
}

.button:hover {
  background:linear-gradient(to bottom, #f6f6f6 5%, #ffffff 100%);
  background-color:#f6f6f6;
}

.button:active {
  position:relative;
  top:1px;
}

.page-control {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.page-control > div {
  max-width: 50%;
}.page-control {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.page-control > div {
  max-width: 50%;
}

.button {
  box-shadow:inset 0px 1px 0px 0px #ffffff;
  background:linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);
  background-color:#ffffff;
  border-radius:16px;
  border:3px solid #dcdcdc;
  display:inline-block;
  cursor:pointer;
  color:#666666;
  font-family:Arial;
  font-size:18px;
  font-weight:bold;
  padding:6px 100px;
  text-decoration:none;
  text-shadow:0px 1px 0px #ffffff;
}

.button:hover {
  background:linear-gradient(to bottom, #f6f6f6 5%, #ffffff 100%);
  background-color:#f6f6f6;
}

.button:active {
  position:relative;
  top:1px;
}

a::after{
  display: none !important;
}